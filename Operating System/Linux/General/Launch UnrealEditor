#!/bin/bash

ShouldLaunchDiffAgent=0

if [ $# -eq 5 ]; then
    ShouldLaunchDiffAgent=1
elif [ $# -eq 3 ]; then
    ShouldLaunchDiffAgent=1
elif [ "$1" == "help" -o "$1" == "--help" ]; then
    echo "usage: $0 [option]"
    echo -e "help, --help\tShow this help"
    echo ""
    echo "EXAMPLE"
    echo "$0"
    echo "Launch UnrealEditor normally."
    echo ""
    echo "$0 uproject FILE1 FILE2"
    echo "Compare 2 uasset files."
    echo ""
    echo "$0 uproject origin/FILE ./FILE HEAD master"
    echo "Compare 2 uasset files and merge if possable."
    exit 0
elif [ $# -eq 0 ]; then
    echo "" > /dev/null
else
    echo "unknown command: $@."
    exit 1
fi

function CloseTerminalDelay() {
    if [ $1 -ge 10 ]; then
        timeout=9
    elif [ $1 -lt 2 ]; then
        timeout=2
    else
        timeout=$1
    fi

    tput cup 23 0
    echo -n "This window will close after $timeout seconds."
    for(( i=$timeout; i>=0; i-- )); do
        if [ $i -eq 1 ]; then
            echo -en "\b\b\b\b\b\b\b\b\b\b$i second. "
        else
            echo -en "\b\b\b\b\b\b\b\b\b\b$i seconds."
        fi
        tput cup 23 39
        sleep 1
    done
    echo ""
    exit $2
}

function LaunchUnrealEditor() {
    if [ $ShouldLaunchDiffAgent -eq 1 ]; then
        echo "Launching UnrealDiffTool in $UEPath..."
        if [ $# -eq 5 ]; then
            setsid "$UEPath/Engine/Binaries/Linux/UnrealEditor" "$1" -Diff "$2" "$3" "$4" "$5" &> /dev/null &
        elif [ $# -eq 3 ]; then
            setsid "$UEPath/Engine/Binaries/Linux/UnrealEditor" "$1" -Diff "$2" "$3" &> /dev/null &
        fi
    else
        echo "Launching UnrealEditor in $UEPath..."
        setsid "$UEPath/Engine/Binaries/Linux/UnrealEditor" &> /dev/null &
    fi
    CloseTerminalDelay 5 0
}

if [ x"$UEPath" == x -o ! -d "$UEPath/.git" ]; then
    echo "unable to locate UnrealEditor. please provide absolute path." >&2
    CloseTerminalDelay 3 1
fi

cd "$UEPath"
if [ $? -ne 0 ]; then
    CloseTerminalDelay 3 1
fi

cntBranch=$(git branch --show-current)
last_commit=$(git rev-parse HEAD)
last_version=$(git rev-parse --short HEAD)

git remote update
updated_commit=$(git rev-parse HEAD)

if [ "$last_commit" == "$updated_commit" ]; then
    echo "UnrealEditor (branch: $cntBranch) is already up to date."
    echo "Last changelog: $(git --no-pager log --format=%B -n 1)"
    LaunchUnrealEditor "$@"
else
    updated_version=$(git rev-parse --short HEAD)
    echo "UnrealEditor has been updated."
    echo "Last changelog: $(git --no-pager log --format=%B -n 1)"
    echo "$last_version â†’ $update_version"
    echo "If you update this repo, you must rebuild UnrealEditor project."
    echo "Would you like update UnrealEditor? (y/N) > "
    read n
    if [ "$n" == "y" -o "$n" == "Y" ]; then
        curl -fsSL https://raw.githubusercontent.com/HyeongminKim/ShellScript/master/Operating%20System/Linux/General/Build%20native%20Linux%20UnrealEditor | bash -s AlternativeSet

        LaunchUnrealEditor "$@"
    else
        echo "User abort." >&2
        LaunchUnrealEditor "$@"
    fi
fi

