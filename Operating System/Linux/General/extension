#!/bin/bash

errorCount=0

pip3 list --outdated --format=freeze | awk -F"==" '{print $1}' | xargs -i pip3 install -U {}
if [ $? != 0 ]; then
    if [ $LANG == "ko_KR.UTF-8" ]; then
        echo "pip3 을 업데이트 하는 도중 에러가 발생하였습니다. "
    else
        echo "An error occured when updating pip3."
    fi
    errorCount=$((errorCount+1))
fi

do-release-upgrade
if [ $? != 0 ]; then
    errorCount=$((errorCount+1))
fi

which wsl.exe > /dev/null 2>&1
if [ $? == 0 ]; then
    wsl.exe --update
    if [ $? != 0 ]; then
        errorCount=$((errorCount+1))
    fi
fi

pip3 cache purge
if [ $? != 0 ]; then
    errorCount=$((errorCount+1))
fi

# if [ -d /mnt/c/Users/$USER/AppData/Local/Microsoft/WindowsApps ]; then
#     /mnt/c/Users/$USER/AppData/Local/Microsoft/WindowsApps/winget.exe upgrade --all
#     if [ $? != 0 ]; then
#         errorCount=$((errorCount+1))
#     fi
#     echo -e "\e[m"
# fi

if [ -d /mnt/c/Windows/System32 ]; then
    /mnt/c/Windows/System32/Dism.exe -Online -Cleanup-Image -CheckHealth
    /mnt/c/Windows/System32/Dism.exe -Online -Cleanup-Image -ScanHealth
    /mnt/c/Windows/System32/Dism.exe -Online -Cleanup-Image -RestoreHealth
    /mnt/c/Windows/System32/sfc.exe -scannow
    # /mnt/c/Windows/System32/chkdsk.exe c: -f
fi

if [ -x ~/.local/bin/gitVI_update ]; then
    ~/.local/bin/gitVI_update
    if [ $? != 0 ]; then
        errorCount=$((errorCount+1))
    fi
fi

/bin/zsh -c "source ~/.zshrc; which omz > /dev/null 2>&1"
if [ $? == 0 ]; then
    /bin/zsh -c "source ~/.zshrc; omz update"
    echo $!
    if [ $? != 0 ]; then
        errorCount=$((errorCount+1))
    fi
fi

if [ $errorCount -gt 0 ]; then
    exit 1
else
    exit 0
fi
