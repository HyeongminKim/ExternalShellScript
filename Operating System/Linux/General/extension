#!/bin/bash

errorCount=0

which aptitude &>/dev/null
if [ $? == 0 ]; then
  sudo aptitude safe-upgrade
  if [ $? != 0 ]; then
    errorCount=$((errorCount + 1))
  fi
fi

if [ "$USE_FULL_UPGRADE" == "true" ]; then
  which pip3 &>/dev/null
  if [ $? == 0 ]; then
    python3 -m pip config set global.break-system-packages true
    if [ $? -ne 0 ]; then
      if [ $LANG == "ko_KR.UTF-8" ]; then
        echo "pip3 을 업데이트 하는 도중 에러가 발생하였습니다. "
      else
        echo "An error occured when updating pip3."
      fi
      errorCount=$((errorCount + 1))
    else
      pip3 list --format=freeze | awk -F"==" '{print $1}' | xargs -i pip3 install -U {}
      if [ $? != 0 ]; then
        if [ $LANG == "ko_KR.UTF-8" ]; then
          echo "pip3 을 업데이트 하는 도중 에러가 발생하였습니다. "
        else
          echo "An error occured when updating pip3."
        fi
        errorCount=$((errorCount + 1))
      fi
    fi
  fi

  which pip3.exe &>/dev/null
  if [ $? == 0 ]; then
    pip3.exe list --format=freeze | awk -F"==" '{print $1}' | xargs -i pip3.exe install -U {}
    if [ $? != 0 ]; then
      if [ $LANG == "ko_KR.UTF-8" ]; then
        echo "pip3.exe 을 업데이트 하는 도중 에러가 발생하였습니다. "
      else
        echo "An error occured when updating pip3.exe."
      fi
      errorCount=$((errorCount + 1))
    fi
    python.exe -m pip install -U pip
  fi
fi

which p4 &> /dev/null
if [ $? -eq 0 ]; then
    echo 'Perforce (P4) release list.'
    curl -fsSL https://help.perforce.com/helix-core/release-notes/relnotes.txt | grep "Major new functionality in $(date +%Y)" | sed "s/Major new functionality in //"
    echo -n 'Current installed '
    p4 -V | tail -1 | sed "s/Rev. P4\/LINUX26X86_64\///"
    echo 'Please download P4 in below link, if new release available.'
    echo -e "\thttps://www.perforce.com/downloads/helix-command-line-client-p4"
fi

which do-release-upgrade &>/dev/null
if [ $? == 0 ]; then
  do-release-upgrade
  if [ $? != 0 ]; then
    errorCount=$((errorCount + 1))
  fi
fi

which wsl.exe &>/dev/null
if [ $? == 0 ]; then
  wsl.exe --status
  wsl.exe --version
  if [ $LANG == "ko_KR.UTF-8" ]; then
    echo 'WSL 업데이트를 확인하려면 `wsl.exe --update --web-download` 코드를 실행하세요.'
  else
    echo 'Please enter `wsl.exe --update --web-download` command if you wanna check WSL updates.'
  fi
fi

which pip3 &>/dev/null
if [ $? == 0 ]; then
  pip3 cache purge
  if [ $? != 0 ]; then
    errorCount=$((errorCount + 1))
  fi
fi

which winget.exe &>/dev/null
if [ $? == 0 ]; then
  #     cmd.exe "/c" "winget.exe upgrade --all"
  cmd.exe "/c" "winget.exe upgrade"
  if [ $? != 0 ]; then
    errorCount=$((errorCount + 1))
  fi
  echo -e "\e[m"
fi

if [ -x ~/.local/bin/gitVI_update ]; then
  ~/.local/bin/gitVI_update
  if [ $? != 0 ]; then
    errorCount=$((errorCount + 1))
  fi
fi

which juliaup &> /dev/null
if [ $? -eq 0 ]; then
    juliaup update
fi

which zsh &>/dev/null
if [ $? == 0 ]; then
  /bin/zsh -c "source ~/.zshrc; which omz > /dev/null 2>&1"
  if [ $? == 0 ]; then
    /bin/zsh -c "source ~/.zshrc; omz update" &
    targetPID=$!
    for (( i=0 ; i<=10 ; i++ )); do
        ps | grep $targetPID &> /dev/null
        if [ $? -ne 0 ]; then
            break
        fi
        sleep 1
    done
    ps | grep $targetPID &> /dev/null
    if [ $? -eq 0 ]; then
        kill $targetPID &> /dev/null
    fi
  fi
fi

if [ ! -x /mnt/c/Windows/System32/cmd.exe ]; then
  which flutter &>/dev/null
  if [ $? == 0 ]; then
    flutter upgrade
    flutter doctor
  fi
else
  where.exe flutter &>/dev/null
  if [ $? == 0 ]; then
    cmd.exe "/c" "flutter upgrade"
    cmd.exe "/c" "flutter doctor"
  fi
fi

if [ $errorCount -gt 0 ]; then
  exit 1
else
  exit 0
fi
