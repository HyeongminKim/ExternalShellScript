#!/bin/bash

public_addr=0
mask=0
verbose=0
chk_url="https://raw.githubusercontent.com/HyeongminKim/ShellScript/master/Operating%20System/Linux/General/inet-addr"

if [ "$1" == "--help" ]; then
    echo "$0 [options]"
    echo -e " --help\t\tShow this help message"
    echo -e " --public\tShow public IPv4 address (default: private)"
    echo -e " --mask=N\tMask N octet address (default: 2)"
    echo -e " --verbose\tprint various output"
    exit 0
fi

params=("$@")
for i in "${params[@]}"; do
    case $i in
        "--public")
            public_addr=1
        ;;
        "--mask=1")
            mask=1
        ;;
        "--mask")
            mask=2
        ;;
        "--mask=2")
            mask=2
        ;;
        "--mask=3")
            mask=3
        ;;
        "--mask=4")
            mask=4
        ;;
        "--verbose")
            verbose=1
        ;;
    esac
done
    
if [ $public_addr -eq 1 ]; then
    cnt_ip="$(dig +short myip.opendns.com @resolver1.opendns.com)"
    echo -n 'Public: '
else
    cnt_ip=$(ifconfig eth0 | sed -n '2p' | awk '{ print $2 }')
    echo -n 'Private: '
fi

if [ $mask -eq 1 ]; then
    printf '♡.%s.%s.%s\n' $(echo $cnt_ip | awk -F. '{ print $2 }') $(echo $cnt_ip | awk -F. '{ print $3 }') $(echo $cnt_ip | awk -F. '{ print $4 }')
elif [ $mask -eq 2 ]; then
    printf '%s.♡.%s.%s\n' $(echo $cnt_ip | awk -F. '{ print $1 }') $(echo $cnt_ip | awk -F. '{ print $3 }') $(echo $cnt_ip | awk -F. '{ print $4 }')
elif [ $mask -eq 3 ]; then
    printf '%s.%s.♡.%s\n' $(echo $cnt_ip | awk -F. '{ print $1 }') $(echo $cnt_ip | awk -F. '{ print $2 }') $(echo $cnt_ip | awk -F. '{ print $4 }')
elif [ $mask -eq 4 ]; then
    printf '%s.%s.%s.♡\n' $(echo $cnt_ip | awk -F. '{ print $1 }') $(echo $cnt_ip | awk -F. '{ print $2 }') $(echo $cnt_ip | awk -F. '{ print $3 }')
else
    echo "$cnt_ip"
fi

if [ $verbose -eq 1 ]; then
    echo -e "\nVERBOSE OUTPUT"
    echo "$0 $@"
    echo -e "\nChecking signature with following url: $chk_url"
fi

local_copy_signature=$(shasum -a 256 "$0" | awk '{ print $1 }')
remote_copy_signature=$(curl -sSf "$chk_url" | shasum -a 256 | awk '{ print $1 }')
if [ "$local_copy_signature" != "$remote_copy_signature" ]; then
    echo -e "\n*** INVALID SIGNATURE DETECTED ***" >&2
    if [ $verbose -eq 1 ]; then
        echo " Local: $local_copy_signature" >&2
        echo "Remote: $remote_copy_signature" >&2
    fi
    exit 1
fi
