#!/bin/bash

recursive=0

if [ $# -eq 0 ]; then
    echo "Usage: newline [options] [<files>]"
    exit 2
elif [ "$1" == "-i" -o "$1" == "--info" ]; then
    params=("$@")
    for i in "${!params[@]}"; do
        if [[ "${params[$i]}" != "-"* ]]; then
            if [ -d "${params[$i]}" -a "$recursive" -eq 0 ]; then
                continue
            elif [ -f "${params[$i]}" -a "$recursive" -eq 0 ]; then
                file "${params[$i]}" 2> /dev/null
                xxd -l 64 "${params[$i]}"
            elif [ -d "${params[$i]}" -a "$recursive" -eq 1 ]; then
                subDir=$(find "${params[$i]}" -type f)
                for a in "${subDir[$i]}"; do
                    file "${subDir[$a]}" 2> /dev/null
                    xxd -l 64 "${subDir[$a]}"
                done
            elif [ -f "${params[$i]}" -a "$recursive" -eq 1 ]; then
                file "${params[$i]}" 2> /dev/null
                xxd -l 64 "${params[$i]}"
            fi
        else
            if [ "${params[$i]}" == "-r" -o "${params[$i]}" == "--recursive" ]; then
                recursive=1
            fi
            continue
        fi

        if [ $(($#-1)) -ne $i ]; then
            echo ""
        fi
        # echo "index: $i, value: ${params[$i]}, length: $#"
    done
    exit 0
elif [ "$1" == "-h" -o "$1" == "--help" ]; then
    echo 'Determine type of files or converting EOL between LF and CRLF.'
    echo -e '\nUsage: newline [options] [<files>]'
    echo -e '\nOptions: '
    echo -e ' -h, --help\t\tdisplay this help and exit'
    echo -e ' -i, --info FILEs\tdisplay provide file type and properties'
    echo -e ' -r, --recursive\tinfo or convert function recursively'
    echo -e '     --type=EOL\t\tlimiting `EOL` type when using converter'
    echo -e '\t\t\t`EOL` only accepted `CRLF` and `LF` (NAK `\\n` or `\\r\\n`)'
    echo -e ' FILEs\t\t\tconverting files EOL in provided params'
    echo -e '\nEXIT STATUS'
    echo -e ' 0\t operation Successful'
    echo -e ' 1\t operation Failed'
    echo -e ' 2\t unknown command or parameter type'
    echo -e '\nEXAMPLES'
    echo 'Print example.txt file EOL type and properties'
    echo '% newline -i example.txt'
    echo ''
    echo 'Convert example.txt file other support EOL type'
    echo '% newline example.txt'
    echo ''
    echo 'Convert example.txt file EOL type to CRLF'
    echo '% newline --type=CRLF example.txt'
    echo ''
    exit 0
fi

constantEOF=""
params=("$@")

for i in "${!params[@]}"; do
    if [[ "${params[$i]}" == "-"* ]]; then
        if [ "${params[$i]}" == "-r" -o "${params[$i]}" == "-recursive" ]; then
            recursive=1
        fi

        if [ "${params[$i]}" == "--type=LF" -o "${params[$i]}" == "--type=lf" ]; then
            constantEOF="LF"
        elif [ "${params[$i]}" == "--type=CRLF" -o "${params[$i]}" == "--type=crlf" ]; then
            constantEOF="CRLF"
        fi
        continue
    fi

    if [ -d "${params[$i]}" ]; then
        continue
    fi

    file -b "${params[$i]}" 2> /dev/null | grep "text" 2> /dev/null | grep "CRLF" &> /dev/null
    if [ $? == 0 ]; then
        sed -i 's/\r$//' "${params[$i]}" &> /dev/null
        if [ $? == 0 ]; then
            echo "${params[$i]}: operation complete. EOL was converted CRLF to LF."
        else
            echo "unable to convert ${params[$i]} file. reason: access denied.">&2
        fi
        continue
    fi

    file -b "${params[$i]}" 2> /dev/null | grep "text" 2> /dev/null | grep "CR" &> /dev/null
    if [ $? == 0 ]; then
        echo "unable to convert ${params[$i]} file. reason: unsupported EOL CR(Macintosh) type.">&2
        continue
    fi

    file -b "${params[$i]}" 2> /dev/null | grep "text" &> /dev/null
    if [ $? == 0 ]; then
        sed -i 's/$/\r/' "${params[$i]}" &> /dev/null
        if [ $? == 0 ]; then
            echo "${params[$i]}: operation complete. EOL was converted LF to CRLF."
        else
            echo "unable to convert ${params[$i]} file. reason: access denied.">&2
        fi
        continue
    fi
done

