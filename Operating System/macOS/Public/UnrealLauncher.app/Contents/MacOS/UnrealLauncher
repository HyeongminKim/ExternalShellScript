#!/bin/bash

debugOutput=~/Library/Logs/Unreal\ Engine/UnrealLauncher/launch.log

if [ -d ~/Library/Logs/Unreal\ Engine/UnrealLauncher ]; then
    echo "log directory already exists." > "$debugOutput"
else
    mkdir ~/Library/Logs/Unreal\ Engine/UnrealLauncher
    if [ $? != 0 ]; then
        echo "Unable to create $HOME/Library/Logs: Please check your permission."
        osascript -e 'tell app "System Events" to display alert "로그 디렉토리에 접근할 수 없어 실행할 수 없습니다. "'
        exit 1
    else
        echo "Succesfully created log directory." > "$debugOutput"
    fi
fi

targetDir="$(echo $0 | sed "s/\/UnrealLauncher$//g")"
cd "$targetDir" >> "$debugOutput" 2>&1
if [ $? != 0 ]; then
    osascript -e 'tell app "System Events" to display alert "프로그램 현재 위치에 접근할 수 없어 실행할 수 없습니다. "'
    exit 1
else
    pwd >> "$debugOutput" 2>&1
fi

if [ -d /Volumes/UnrealEditor ]; then
    echo "The /Volumes/External/Applications/Epic Games/UnrealEditor.dmg disk image already mounted. Skipping." >> "$debugOutput"
elif [ -d /Volumes/External -a -r /Volumes/External/Applications/Epic\ Games/UnrealEditor.dmg ]; then
    if [ -w /Volumes/External/Applications/Epic\ Games/UnrealEditor.dmg ]; then
        open /Volumes/External/Applications/Epic\ Games/UnrealEditor.dmg >> "$debugOutput" 2>&1
        echo "Successfully mount /Volumes/External/Applications/Epic Games/UnrealEditor.dmg disk image." >> "$debugOutput"
    else
        echo "Unable to mount /Volumes/External/Applications/Epic Games/UnrealEditor.dmg disk image. Please check your permission." >> "$debugOutput"
        osascript -e 'tell app "System Events" to display alert "UnrealEditor을(를) 마운트 할 수 없습니다. 디스크 쓰기 권한을 확인해 주세요."'
        exit 1
    fi
else
    echo "Unable to locate UnrealEditor.dmg. Exiting." >> "$debugOutput"
    osascript -e 'tell app "System Events" to display alert "External 디스크가 감지되지 않아 UnrealEditor을(를) 마운트할 수 없습니다."'
    exit 1
fi

if [ -x /Applications/Epic\ Games\ Launcher.app ]; then
    open /Applications/Epic\ Games\ Launcher.app >> "$debugOutput" 2>&1
    echo "Succesfully launched Epic Games Launcher.app." >> "$debugOutput"
else
    echo "Unable to execute Epic Games Launcher.app: no such file or directory." >> "$debugOutput"
fi

while : ; do
    pgrep EpicGamesLauncher &> /dev/null
    if [ $? == 0 ]; then
        echo "EpicGamesLauncher is running! PID: $(pgrep EpicGamesLauncher)" >> "$debugOutput"
        EpicLauncher_EXIT=""
    else
        echo "EpicGamesLauncher is not running." >> "$debugOutput"
        EpicLauncher_EXIT="TRUE"
    fi

    pgrep UnrealEditor &> /dev/null
    if [ $? == 0 ]; then
        echo "UnrealEditor is running! PID: $(pgrep UnrealEditor)" >> "$debugOutput"
        UE_EXIT=""
    else
        echo "UnrealEditor is not running." >> "$debugOutput"
        UE_EXIT="TRUE"
    fi

    if [ "$EpicLauncher_EXIT" == "TRUE" -a "$UE_EXIT" == "TRUE" ]; then
        echo "The Epic Games Launcher and UnrealEditor was exited recently. UnrealEditor.dmg volume will now ejected." >> "$debugOutput"
        echo "The UnrealEditor.dmg volume known ID: $(df -h | grep UnrealEditor | awk '{ print $1 }')." >> "$debugOutput"
        diskutil eject $(df -h | grep UnrealEditor | awk '{ print $1 }') >> "$debugOutput" 2>&1
        if [ $? != 0 ]; then
            osascript -e 'tell app "System Events" to display alert "UnrealEditor을(를) 추출하는데 실패하였습니다."'
        else
            exit 0
        fi
    else
        sleep 1
    fi
done
