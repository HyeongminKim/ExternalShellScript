#!/bin/bash

debugOutput=~/Library/Logs/Unreal\ Engine/UnrealLauncher/launch.log
manuallyMounted=""

function logcat_init() {
    echo -e "$1" > "$debugOutput"
}

function logcat_append() {
    logSize=$(ls -l ~/Library/Logs/Unreal\ Engine/UnrealLauncher/launch.log | awk '{ print $5 }')
    if [ $logSize -ge 10000000 ]; then
        archive_date="$(date)"
        echo -e "\nThis log file was closed at $archive_date due to reached maximum log file size (10MB)." >> "$debugOutput"
        echo -e "=== EOF ===" >> "$debugOutput"
        mv ~/Library/Logs/Unreal\ Engine/UnrealLauncher/launch.log ~/Library/Logs/Unreal\ Engine/UnrealLauncher/launch_"$archive_date".log
        logcat_init "Successfully created log file at $archive_date."
        echo -e "The previous log contents was reached maximum log file size (10MB)." >> "$debugOutput"
        echo -e "previous log file was backup at ~/Library/Logs/Unreal Engine/UnrealLauncher/launch_$archive_date.log\n" >> "$debugOutput"
    fi
    echo -e "$1" >> "$debugOutput"
}

function cleanup_process() {
    if [ -r /Library/Application\ Support/Epic/UnrealLauncher/newagent.lock ]; then
        rm /Library/Application\ Support/Epic/UnrealLauncher/newagent.lock
        logcat_append "Successfully removed lock file."
    else
        logcat_append "Unable to remove lock file. no such file or directory."
    fi
    logcat_append "UnrealLauncher will now terminate with exit code $1."
    logcat_append "UnrealLauncher close $debugOutput file. The current log file size is $(ls -lh ~/Library/Logs/Unreal\ Engine/UnrealLauncher/launch.log | awk '{ print $5 }')."
    logcat_append "UnrealLauncher exited at $(date).\n"
    exit $1
}

function interrupt_catch() {
    logcat_append "UnrealLauncher detected interrupt. Checking some requirements for processing interrupt."
    pgrep EpicGamesLauncher &> /dev/null && pgrep UnrealEditor &> /dev/null
    if [ $? == 0 ]; then
        logcat_append "The Epic Games Launcher and UnrealEditor was exited recently. UnrealEditor.dmg volume will now ejected."
        diskutil eject $(df -h | grep UnrealEditor | awk '{ print $1 }') >> "$debugOutput" 2>&1
        cleanup_process 0
    else
        logcat_append "UnrealEditor does not ejected successfully. Please see the output."
        logcat_append "Unable to eject UnrealEditor.dmg disk image due to EpicGameLauncher and UnrealEditor is still running."
        logcat_append "Unable to exit UnrealLauncher due to UnrealEditor.dmg is still mounted and active.\n"
        osascript -e 'display alert "UnrealLauncher을(를) 종료하려면 먼저 Epic Games Launcher와(과) UnrealEditor이(가) 실행 중이 아니어야 합니다." as warning'
        return
    fi
}

if [ -r /Library/Application\ Support/Epic/UnrealLauncher/newagent.lock ]; then
    echo "error: Unable to launch new agent. This app already running."
    osascript -e 'display alert "UnrealLauncher이(가) 이미 실행중입니다." as critical'
    exit 1
fi

if [ -d ~/Library/Logs/Unreal\ Engine/UnrealLauncher ]; then
    if [ -r ~/Library/Logs/Unreal\ Engine/UnrealLauncher/launch.log ]; then
        logcat_append "UnrealLauncher was started at $(date)..."
        logcat_append "$(uname -v)"
        logcat_append "load averages: $(uptime | awk -F '[a-z]: ' '{ print $2 }')"
        logcat_append "$(uname -n) active cpu count: $(sysctl -n hw.activecpu)"
        logcat_append "log directory already exists."
        logcat_append "log file already exists. current log size is $(ls -lh ~/Library/Logs/Unreal\ Engine/UnrealLauncher/launch.log | awk '{ print $5 }')."
    else
        logcat_init "UnrealLauncher was started at $(date)..."
        logcat_append "$(uname -v)"
        logcat_append "load averages: $(uptime | awk -F '[a-z]: ' '{ print $2 }')"
        logcat_append "$(uname -n) active cpu count: $(sysctl -n hw.activecpu)"
        logcat_append "log directory already exists."
        logcat_append "Successfully created log file at $(date)"
    fi
else
    mkdir ~/Library/Logs/Unreal\ Engine/UnrealLauncher
    if [ $? != 0 ]; then
        echo "Unable to create $HOME/Library/Logs: Please check your permission."
        osascript -e 'display alert "로그 디렉토리에 접근할 수 없어 실행할 수 없습니다. " as critical'
        exit 1
    else
        logcat_init "Succesfully created log directory."
        logcat_append "Successfully created log file at $(date)."
        logcat_append "UnrealLauncher was started at $(date)..."
        logcat_append "$(uname -v)"
        logcat_append "load averages: $(uptime | awk -F '[a-z]: ' '{ print $2 }')"
        logcat_append "$(uname -n) active cpu count: $(sysctl -n hw.activecpu)"
    fi
fi

if [ -d /Library/Application\ Support/Epic/UnrealLauncher ]; then
    logcat_append "Successfully created lock file."
    touch /Library/Application\ Support/Epic/UnrealLauncher/newagent.lock
else
    osascript -e 'do shell script "sudo mkdir -p \"/Library/Application Support/Epic/UnrealLauncher\" && sudo chown $USER:staff \"/Library/Application Support/Epic/UnrealLauncher\"" with prompt "UnrealLauncher이(가) 변경하려고 합니다. 허용하려면 암호를 입력하세요." with administrator privileges'
    if [ $? != 0 ]; then
        logcat_append "Unable to create lock file. Please check your permission.\n"
        osascript -e 'display alert "에이젼트 잠금을 적용할 수 없어 계속 진행할 수 없습니다." as critical'
        exit 1
    else
        chmod 775 /Library/Application\ Support/Epic/UnrealLauncher >> "$debugOutput" 2>&1
        touch /Library/Application\ Support/Epic/UnrealLauncher/newagent.lock
        logcat_append "Successfully created lock file."
    fi
fi

targetDir="$(echo $0 | sed "s/\/UnrealLauncher$//g")"
cd "$targetDir" >> "$debugOutput" 2>&1
if [ $? != 0 ]; then
    logcat_append "Unable to locate $targetDir. Aborting.\n"
    osascript -e 'display alert "프로그램 현재 위치에 접근할 수 없어 실행할 수 없습니다. " as critical'
    cleanup_process 1
else
    logcat_append "Current working directory: $(pwd)"
fi

if [ -d /Volumes/UnrealEditor ]; then
    logcat_append "The /Volumes/External/Applications/Epic Games/UnrealEditor.dmg disk image already mounted. Skipping."
    manuallyMounted="TRUE"
    trap interrupt_catch SIGINT SIGTERM
    logcat_append "The UnrealLauncher will not respond some signals and execute internal events."
elif [ -d /Volumes/External -a -r /Volumes/External/Applications/Epic\ Games/UnrealEditor.dmg ]; then
    if [ -w /Volumes/External/Applications/Epic\ Games/UnrealEditor.dmg ]; then
        open -W /Volumes/External/Applications/Epic\ Games/UnrealEditor.dmg >> "$debugOutput" 2>&1
        if [ -d /Volumes/UnrealEditor ]; then
            logcat_append "Successfully mount /Volumes/External/Applications/Epic Games/UnrealEditor.dmg disk image."
            trap interrupt_catch SIGINT SIGTERM
            logcat_append "The UnrealLauncher will not respond some signals and execute internal events."
        else
            logcat_append "Unexpected exception occured when attempting to mount UnrealEditor.dmg disk image."
            osascript -e 'display alert "알 수 없는 오류로 인해 UnrealEditor을(를) 마운트 할 수 없습니다." as critical'
            cleanup_process 1
        fi
    else
        logcat_append "Unable to mount /Volumes/External/Applications/Epic Games/UnrealEditor.dmg disk image. Please check your permission.\n"
        osascript -e 'display alert "UnrealEditor을(를) 마운트 할 수 없습니다. 디스크 쓰기 권한을 확인해 주세요." as critical'
        cleanup_process 1
    fi
else
    logcat_append "Unable to locate UnrealEditor.dmg. Exiting.\n"
    osascript -e 'display alert "External 디스크가 감지되지 않아 UnrealEditor을(를) 마운트할 수 없습니다." as critical'
    cleanup_process 1
fi

if [ -x /Applications/Epic\ Games\ Launcher.app ]; then
    open /Applications/Epic\ Games\ Launcher.app >> "$debugOutput" 2>&1
    logcat_append "Succesfully launched Epic Games Launcher.app."
else
    logcat_append "Unable to locate Epic Games Launcher.app in /Applications directory. Please execute UnrealEditor manually.\n"
    open /Volumes/UnrealEditor >> "$debugOutput" 2>&1
fi

while : ; do
    display_status=$(echo $(ioreg -n IODisplayWrangler | grep -i IOPowerManagement | perl -pe 's/^.*DevicePowerState\"=([0-9]+).*$/\1/')/4 | bc)
    if [ $display_status -eq 0 ]; then
        logcat_append "$(uname -n) is sleeping. UnrealLauncher running with low energy mode (App Nap)."
        logcat_append "NOTE: UnrealLauncher will not call some events when running with low energy mode."
        sleep 30
        continue
    fi

    cntLoadAverages=$(uptime | awk -F '[a-z]: ' '{ print $2 }' | awk '{print $1}')
    deviceCPUCount=$(sysctl -n hw.activecpu)
    if (( $(echo "$cntLoadAverages > $deviceCPUCount*2" | bc -l) )); then
        logcat_append "$(uname -n) is throttled. UnrealLauncher was limited operation due to inviolate UnrealEditor performance."
        sleep 15
    fi

    pgrep EpicGamesLauncher &> /dev/null
    if [ $? == 0 ]; then
        if [ $(pgrep EpicGamesLauncher | awk 'END { print NR }') -eq 1 ]; then
            logcat_append "EpicGamesLauncher is still running! PID: $(pgrep EpicGamesLauncher)"
        else
            logcat_append "EpicGamesLauncher are still running! $(pgrep EpicGamesLauncher | awk 'END { print NR }') EpicGamesLauncher were opened."
        fi
        EpicLauncher_EXIT=""
    else
        logcat_append "EpicGamesLauncher is not running."
        EpicLauncher_EXIT="TRUE"
    fi

    pgrep UnrealEditor &> /dev/null
    if [ $? == 0 ]; then
        if [ $(pgrep UnrealEditor | awk 'END { print NR }') -eq 1 ]; then
            logcat_append "UnrealEditor is still running! PID: $(pgrep UnrealEditor)"
        else
            logcat_append "UnrealEditor are still running! $(pgrep UnrealEditor | awk 'END { print NR }') UnrealEditor were opened."
        fi
        UE_EXIT=""
    else
        logcat_append "UnrealEditor is not running."
        UE_EXIT="TRUE"
    fi

    if [ "$EpicLauncher_EXIT" == "TRUE" -a "$UE_EXIT" == "TRUE" ]; then
        if [ "$manuallyMounted" == "TRUE" ]; then
            logcat_append "The Epic Games Launcher and UnrealEditor was exited recently. UnrealEditor.dmg was manually mounted."
            logcat_append "The UnrealEditor.dmg volume known ID: $(df -h | grep UnrealEditor | awk '{ print $1 }')."
            logcat_append "Please eject UnrealEditor.dmg disk image manually."
            cleanup_process 0
        else
            logcat_append "The Epic Games Launcher and UnrealEditor was exited recently. Trying to ejcet UnrealEditor.dmg volume."
            logcat_append "The UnrealEditor.dmg volume known ID: $(df -h | grep UnrealEditor | awk '{ print $1 }')."
            diskutil eject $(df -h | grep UnrealEditor | awk '{ print $1 }') >> "$debugOutput" 2>&1
            if [ $? != 0 ]; then
                for ((i=1;i<=10;i++)); do
                    logcat_append "The UnrealEditor.dmg volume known ID (attempt: $i/10): $(df -h | grep UnrealEditor | awk '{ print $1 }')."
                    diskutil eject $(df -h | grep UnrealEditor | awk '{ print $1 }') >> "$debugOutput" 2>&1
                    if [ $? == 0 ]; then
                        logcat_append "Successfully ejected UnrealEditor.dmg volume."
                        cleanup_process 0
                    fi
                    sleep 30
                done
                logcat_append "Unable to eject UnrealEditor.dmg (TRAP_UNMOUNT_FAILURE). reason: some application or process are still access UnrealEditor.dmg volume."
                logcat_append "The UnrealEditor.dmg volume known ID: $(df -h | grep UnrealEditor | awk '{ print $1 }')."
                logcat_append "Please eject UnrealEditor.dmg disk image manually."
                osascript -e 'display alert "UnrealEditor이(가) 현재 사용중이므로 추출할 수 없습니다." as warning'
                cleanup_process 1
            else
                logcat_append "Successfully ejected UnrealEditor.dmg volume."
                cleanup_process 0
            fi
        fi
    else
        sleep 1
    fi
done
