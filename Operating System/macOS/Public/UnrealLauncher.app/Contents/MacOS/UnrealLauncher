#!/bin/bash

debugOutput=~/Library/Logs/Unreal\ Engine/UnrealLauncher/launch.log

function logcat_init() {
    echo -e "$1" > "$debugOutput"
}

function logcat_append() {
    echo -e "$1" >> "$debugOutput"
}

function cleanup_process() {
    if [ -r ~/Library/Application\ Support/Epic/UnrealLauncher/newagent.lock ]; then
        rm ~/Library/Application\ Support/Epic/UnrealLauncher/newagent.lock
        logcat_append "Successfully removed lock file."
    else
        logcat_append "Unable to remove lock file. no such file or directory."
    fi
    logcat_append "UnrealLauncher exited at $(date).\n"
    exit $1
}

function interrupt_catch() {
    logcat_append "UnrealLauncher detected interrupt. Checking some requirements for processing interrupt."
    pgrep EpicGamesLauncher &> /dev/null && pgrep UnrealEditor &> /dev/null
    if [ $? == 0 ]; then
        logcat_append "The Epic Games Launcher and UnrealEditor was exited recently. UnrealEditor.dmg volume will now ejected."
        diskutil eject $(df -h | grep UnrealEditor | awk '{ print $1 }') >> "$debugOutput" 2>&1
        cleanup_process 0
    else
        logcat_append "UnrealEditor does not ejected successfully. Please see the output above."
        logcat_append "Unable to eject UnrealEditor.dmg disk image due to EpicGameLauncher and UnrealEditor is still running."
        logcat_append "Unable to exit UnrealLauncher due to UnrealEditor.dmg is still mounted and active.\n"
        osascript -e 'tell app "System Events" to display alert "UnrealLauncher을(를) 종료하려면 먼저 Epic Games Launcher와(과) UnrealEditor이(가) 실행 중이 아니어야 합니다."'
        return
    fi
}

if [ -r ~/Library/Application\ Support/Epic/UnrealLauncher/newagent.lock ]; then
    echo "error: Unable to launch new agent. This app already running."
    exit 1
fi

if [ -d ~/Library/Logs/Unreal\ Engine/UnrealLauncher ]; then
    logcat_append "UnrealLauncher was started at $(date)..."
    logcat_append "log directory already exists."
else
    mkdir ~/Library/Logs/Unreal\ Engine/UnrealLauncher
    if [ $? != 0 ]; then
        echo "Unable to create $HOME/Library/Logs: Please check your permission."
        osascript -e 'tell app "System Events" to display alert "로그 디렉토리에 접근할 수 없어 실행할 수 없습니다. "'
        exit 1
    else
        logcat_init "Succesfully created log directory."
    fi
fi

if [ -d ~/Library/Application\ Support/Epic/UnrealLauncher ]; then
    logcat_append "Successfully created lock file."
    touch ~/Library/Application\ Support/Epic/UnrealLauncher/newagent.lock
else
    mkdir ~/Library/Application\ Support/Epic/UnrealLauncher
    if [ $? != 0 ]; then
        logcat_append "Unable to create $HOME/Library/Application Support/Epic/UnrealLauncher/newagent.lock: Please check your permission.\n"
        osascript -e 'tell app "System Events" to display alert "에이젼트 잠금을 적용할 수 없어 계속 진행할 수 없습니다."'
        exit 1
    else
        logcat_append "Successfully created lock file."
        touch ~/Library/Application\ Support/Epic/UnrealLauncher/newagent.lock
    fi
fi

targetDir="$(echo $0 | sed "s/\/UnrealLauncher$//g")"
cd "$targetDir" >> "$debugOutput" 2>&1
if [ $? != 0 ]; then
    logcat_append "Unable to locate $targetDir. Aborting.\n"
    osascript -e 'tell app "System Events" to display alert "프로그램 현재 위치에 접근할 수 없어 실행할 수 없습니다. "'
    cleanup_process 1
else
    logcat_append "Current working directory: "
    pwd >> "$debugOutput" 2>&1
fi

if [ -d /Volumes/UnrealEditor ]; then
    logcat_append "The /Volumes/External/Applications/Epic Games/UnrealEditor.dmg disk image already mounted. Skipping."
elif [ -d /Volumes/External -a -r /Volumes/External/Applications/Epic\ Games/UnrealEditor.dmg ]; then
    if [ -w /Volumes/External/Applications/Epic\ Games/UnrealEditor.dmg ]; then
        open /Volumes/External/Applications/Epic\ Games/UnrealEditor.dmg >> "$debugOutput" 2>&1
        logcat_append "Successfully mount /Volumes/External/Applications/Epic Games/UnrealEditor.dmg disk image."
        trap interrupt_catch SIGINT SIGTERM
        logcat_append "The UnrealLauncher will not respond some signals and execute internal events."
    else
        logcat_append "Unable to mount /Volumes/External/Applications/Epic Games/UnrealEditor.dmg disk image. Please check your permission.\n"
        osascript -e 'tell app "System Events" to display alert "UnrealEditor을(를) 마운트 할 수 없습니다. 디스크 쓰기 권한을 확인해 주세요."'
        cleanup_process 1
    fi
else
    logcat_append "Unable to locate UnrealEditor.dmg. Exiting.\n"
    osascript -e 'tell app "System Events" to display alert "External 디스크가 감지되지 않아 UnrealEditor을(를) 마운트할 수 없습니다."'
    cleanup_process 1
fi

if [ -x /Applications/Epic\ Games\ Launcher.app ]; then
    open /Applications/Epic\ Games\ Launcher.app >> "$debugOutput" 2>&1
    logcat_append "Succesfully launched Epic Games Launcher.app."
else
    logcat_append "Unable to execute Epic Games Launcher.app: no such file or directory.\n"
    cleanup_process 1
fi

while : ; do
    logSize=$(ls -l ~/Library/Logs/Unreal\ Engine/UnrealLauncher/launch.log | awk '{ print $5 }')
    if [ $logSize -ge 1000000 ]; then
        logcat_init "The log file content reached maximum log file size (1MB)."
        logcat_append "Removed previous log file contents...\n"
    fi

    pgrep EpicGamesLauncher &> /dev/null
    if [ $? == 0 ]; then
        logcat_append "EpicGamesLauncher is running! PID: $(pgrep EpicGamesLauncher)"
        EpicLauncher_EXIT=""
    else
        logcat_append "EpicGamesLauncher is not running."
        EpicLauncher_EXIT="TRUE"
    fi

    pgrep UnrealEditor &> /dev/null
    if [ $? == 0 ]; then
        logcat_append "UnrealEditor is running! PID: $(pgrep UnrealEditor)"
        UE_EXIT=""
    else
        logcat_append "UnrealEditor is not running."
        UE_EXIT="TRUE"
    fi

    if [ "$EpicLauncher_EXIT" == "TRUE" -a "$UE_EXIT" == "TRUE" ]; then
        logcat_append "The Epic Games Launcher and UnrealEditor was exited recently. UnrealEditor.dmg volume will now ejected."
        logcat_append "The UnrealEditor.dmg volume known ID: $(df -h | grep UnrealEditor | awk '{ print $1 }')."
        diskutil eject $(df -h | grep UnrealEditor | awk '{ print $1 }') >> "$debugOutput" 2>&1
        if [ $? != 0 ]; then
            osascript -e 'tell app "System Events" to display alert "UnrealEditor을(를) 추출하는데 실패하였습니다."'
            logcat_append "UnrealEditor does not ejected successfully. Please see the output above."
            logcat_append "Unable to eject UnrealEditor.dmg disk image due to EpicGameLauncher and UnrealEditor is still running."
            cleanup_process 1
        else
            cleanup_process 0
        fi
    else
        sleep 1
    fi
done
